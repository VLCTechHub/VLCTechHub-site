{"version":3,"sources":["assets/js/events-new.js","assets/js/job-new.js"],"names":["Site","Events","New","init","DST","start","Date","end","$E","selector","document","querySelector","buildEventDateTime","date","value","time","offset","utcOffset","dst","getUTCFullYear","getUTCOffset","$form","addEventListener","checkValidity","fetch","API_ROOT","method","mode","cache","headers","body","JSON","stringify","title","description","link","hashtag","then","response","ok","Error","forEach","field","removeAttribute","style","display","scrollIntoView","behaviour","block","catch","setAttribute","focus","Job","removeHTLM","text","div","createElement","innerHTML","textContent","innerText","how_to_apply","salary","company","name","twitter","tags","split","contact_email"],"mappings":"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","file":"vlctechhub-47305eb-min.js","sourcesContent":["Site.Events = Site.Events || {}\nSite.Events.New = {}\nSite.Events.New.init = function () {\n  let DST = {\n    2019: { start: new Date(2019, 2, 31, 2), end: new Date(2019, 9, 27, 3) },\n    2020: { start: new Date(2020, 2, 29, 2), end: new Date(2020, 9, 25, 3) },\n    2021: { start: new Date(2021, 2, 28, 2), end: new Date(2021, 9, 31, 3) },\n    2022: { start: new Date(2022, 2, 27, 2), end: new Date(2022, 9, 30, 3) },\n    2023: { start: new Date(2023, 2, 26, 2), end: new Date(2023, 9, 29, 3) },\n    2024: { start: new Date(2024, 2, 31, 2), end: new Date(2024, 9, 27, 3) },\n    2025: { start: new Date(2025, 2, 30, 2), end: new Date(2025, 9, 26, 3) },\n    2026: { start: new Date(2026, 2, 29, 2), end: new Date(2026, 9, 25, 3) },\n    2027: { start: new Date(2027, 2, 28, 2), end: new Date(2027, 9, 31, 3) },\n    2028: { start: new Date(2028, 2, 26, 2), end: new Date(2028, 9, 29, 3) },\n    2029: { start: new Date(2029, 2, 25, 2), end: new Date(2029, 9, 28, 3) },\n  }\n\n  function $E(selector) {\n    return document.querySelector(selector)\n  }\n\n  function getUTCOffset(date) {\n    let utcOffset = 1\n\n    let dst = DST[date.getUTCFullYear()]\n    if (dst && date >= dst.start && date < dst.end) {\n      utcOffset = 2\n    }\n    return utcOffset\n  }\n\n  function buildEventDateTime() {\n    let date = $E('#startDate').value\n    let time = $E('#startTime').value\n    let offset = getUTCOffset(new Date(date))\n    return `${date}T${time}+0${offset}:00`\n  }\n\n  function buildEventAPIData() {\n    let data = {\n      title: $E('#title').value,\n      description: $E('#description').value,\n      link: $E('#sourceUrl').value,\n      hashtag: $E('#hashtag').value,\n      date: buildEventDateTime(),\n    }\n    return data\n  }\n\n  function clearForm() {\n    let fields = ['#title', '#description', '#startDate', '#startTime', '#sourceUrl', '#hashtag']\n    fields.forEach((field) => {\n      $E(field).value = ''\n    })\n    $form.removeAttribute('data-submit-attempted')\n  }\n\n  function showValidationErrors() {\n    $form.setAttribute('data-submit-attempted', true)\n    $form.querySelector(':invalid').focus()\n  }\n\n  function showOKMessage() {\n    $E('.notification.success').style.display = 'block'\n    $E('.notification.error').style.display = 'none'\n    $E('header .title').scrollIntoView({ behaviour: 'smooth', block: 'end' })\n  }\n\n  function showKOMessage() {\n    $E('.notification.success').style.display = 'none'\n    $E('.notification.error').style.display = 'block'\n    $E('header .title').scrollIntoView({ behaviour: 'smooth', block: 'end' })\n  }\n\n  function submitEvent() {\n    if (!$form.checkValidity()) {\n      showValidationErrors()\n      return false\n    }\n\n    fetch(Site.API_ROOT + '/events/', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(buildEventAPIData()),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Response not ok')\n        }\n      })\n      .then(() => {\n        clearForm()\n        showOKMessage()\n      })\n      .catch(() => {\n        showKOMessage()\n      })\n    return false\n  }\n\n  let $form = $E('#new-event form')\n  $form.querySelector('button[data-type=\"submit\"]').addEventListener('click', submitEvent)\n}\n","Site.Job = Site.Job || {}\nSite.Job.New = {}\nSite.Job.New.init = function () {\n  function $E(selector) {\n    return document.querySelector(selector)\n  }\n\n  function buildJobAPIData() {\n    let data = {\n      title: $E('#title').value,\n      description: removeHTLM($E('#description').value),\n      how_to_apply: $E('#howToApply').value,\n      link: $E('#sourceUrl').value,\n      salary: $E('#salary').value,\n      company: {\n        name: $E('#companyName').value,\n        link: $E('#companyWeb').value,\n        twitter: $E('#companyTwitter').value,\n      },\n      tags: ($E('#keywords').value || '').split(','),\n      contact_email: $E('#companyContact').value,\n    }\n    return data\n  }\n\n  function removeHTLM(text) {\n    const div = document.createElement('div')\n    div.innerHTML = text\n    return div.textContent || div.innerText || ''\n  }\n\n  function clearForm() {\n    let fields = [\n      '#title',\n      '#description',\n      '#keywords',\n      '#salary',\n      '#howToApply',\n      '#sourceUrl',\n      '#companyName',\n      '#companyWeb',\n      '#companyTwitter',\n      '#companyContact',\n    ]\n    fields.forEach((field) => {\n      $E(field).value = ''\n    })\n    $form.removeAttribute('data-submit-attempted')\n  }\n\n  function showValidationErrors() {\n    $form.setAttribute('data-submit-attempted', true)\n    $form.querySelector(':invalid').focus()\n  }\n\n  function showOKMessage() {\n    $E('.notification.success').style.display = 'block'\n    $E('.notification.error').style.display = 'none'\n    $E('header .title').scrollIntoView({ behaviour: 'smooth', block: 'end' })\n  }\n\n  function showKOMessage() {\n    $E('.notification.success').style.display = 'none'\n    $E('.notification.error').style.display = 'block'\n    $E('header .title').scrollIntoView({ behaviour: 'smooth', block: 'end' })\n  }\n\n  function submitEvent() {\n    if (!$form.checkValidity()) {\n      showValidationErrors()\n      return false\n    }\n\n    fetch(Site.API_ROOT + '/jobs/', {\n      method: 'POST',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(buildJobAPIData()),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Response not ok')\n        }\n      })\n      .then(() => {\n        clearForm()\n        showOKMessage()\n      })\n      .catch(() => {\n        showKOMessage()\n      })\n    return false\n  }\n\n  let $form = $E('#new-job form')\n  $form.querySelector('button[data-type=\"submit\"]').addEventListener('click', submitEvent)\n}\n"]}